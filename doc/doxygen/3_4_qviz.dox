/**
@page qviz qviz Plugin for GSLAM

\image html qviz_small.png "qviz visualizing a map context."

qviz is a highly customizable visualizer based on Qt,
it is similar to the ROS visualizer tool [rviz](http://wiki.ros.org/rviz/).
However, benefit from Svar solving dynamic objects,
the qviz of GSLAM is more easier to use, more light-weighted and ready for extend.

Get started to customize qviz:
- @link sPanel Implement a panel plugin @endlink
- @link sTool Add an action in toolbar via Messenger @endlink
- @link sMenu Add an menu via Messenger @endlink
- @link sDisplay Add display via Messenger @endlink
- @link sDisplayPlugin Implement a display plugin @endlink

\section sQviz_panels Panels of qviz

qviz allows users to extend their own panels.
All you need to do is to implement a QWidget, regist it with macro 'GSLAM_REGISTER_PANEL',
and compile it to a shared library with name qviz_<name>.


Here below is a sample panel source code to show topic lists:

```
#include <QWidget>
#include <QListWidget>
#include <QDockWidget>
#include <QTableWidget>
#include <QHeaderView>
#include <GSLAM/core/GSLAM.h>

namespace GSLAM {

class PanelPubsub : QDockWidget
{
public:
    PanelPubsub(QWidget* parent,Svar config):QDockWidget(parent){
        setObjectName("Messenger Topics");
        setProperty("area","right");

        table=new QTableWidget(this);
        setWidget(table);
        table->setColumnCount(3);
        table->setHorizontalHeaderLabels({"Name","Type","PayLoad"});

        QHeaderView *HorzHdr = table->horizontalHeader();
    #if QT_VERSION>=0x050000
        HorzHdr->setSectionResizeMode(QHeaderView::Stretch);
        HorzHdr->setSectionResizeMode(0, QHeaderView::ResizeToContents);
    #else
        HorzHdr->setResizeMode(QHeaderView::Stretch);
    #endif

        data["newSub"]=messenger.subscribe("messenger/newsub",[this](Subscriber sub){
            this->updateTable();
        });
        data["newPub"]=messenger.subscribe("messenger/newpub",[this](Publisher pub){
            this->updateTable();
        });
        updateTable();
    }

    QTableWidgetItem* setValue(int row,int col,QString val)
    {
        if(table->item(row,col)!=NULL)
        {
            table->item(row,col)->setText(val);
            return table->item(row,col);
        }
        else
        {
            QTableWidgetItem* item=new QTableWidgetItem();
            item->setText(val);
            table->setItem(row,col,item);
            return item;
        }
    }

    void   updateTable()
    {
        std::vector<std::array<std::string,3>> pubsubs;

        for(Publisher pub:messenger.getPublishers()){
            pubsubs.push_back({pub.getTopic(),"Publisher",pub.getTypeName()});
        }
        for(Subscriber pub:messenger.getSubscribers()){
            pubsubs.push_back({pub.getTopic(),"Subscriber",pub.getTypeName()});
        }

        if(table->rowCount()!=pubsubs.size())
        {
            table->setRowCount(pubsubs.size());
            int i=0;
            for(auto it:pubsubs)
            {
                setValue(i,0,it[0].c_str())->setFlags(Qt::ItemIsEditable);
                setValue(i,1,it[1].c_str())->setFlags(Qt::ItemIsEditable);
                setValue(i,2,it[2].c_str())->setFlags(Qt::ItemIsEditable);
                i++;
            }
        }
        else{
            for(int i=0;i<table->rowCount();i++)
            {
                for(int j=0;j<3;j++)
                    table->item(i,j)->setText(pubsubs[i][j].c_str());
            }
        }
        update();
    }

    QTableWidget* table;
    Svar          data;
};


GSLAM_REGISTER_PANEL(pubsub,GSLAM::PanelPubsub);

}
```

It should be noted that by define the property of QObject,
the panel can be putted to "left","right","top","bottom" dock areas or "center" tab areas.
```
setObjectName("Messenger Topics"); // name
setProperty("area","right"); // area
```
\image html dock_ares.png "Users are able to remote qviz in all areas including menu, toolbar, docks and displays"

\section sTool Add an action in toolbar via Messenger





\section sQviz_displays Displays of qviz




\section sQviz_menu Add Menu with Messenger



*/
